/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas.mantenimientos;

import controladores.Controlador;
import controladores.EmpleadoControlador;
import controladores.GrupoHorarioControlador;
import entidades.AsignacionHorario;
import entidades.DetalleGrupoHorario;
import entidades.Empleado;
import entidades.GrupoHorario;
import vistas.dialogos.DlgEmpleado;
import vistas.modelos.MTEmpleado;
import vistas.modelos.MTGrupoHorario;
import com.personal.utiles.FormularioUtil;
import controladores.AsignacionPermisoControlador;
import controladores.DetalleGrupoControlador;
import controladores.EmpleadoTControlador;
import entidades.EmpleadoT;
import java.util.ArrayList;
import java.util.List;
import org.jdesktop.observablecollections.ObservableCollections;
import vistas.dialogos.DlgEmpleadoT;
import vistas.dialogos.DlgImportarDNI;
import vistas.modelos.MTEmpleadoT;

/**
 *
 * @author fesquivelc
 */
public class CRUDGrupoHorarioTest extends javax.swing.JInternalFrame {

    /**
     * Creates new form CRUDPeriodo
     */
    private List<GrupoHorario> listado;
    private List<Empleado> integrantes;
    private List<EmpleadoT> integrantesT;
    private GrupoHorarioControlador controlador;
    private GrupoHorarioControlador tcontrolador;
    private EmpleadoControlador ec;
    private EmpleadoTControlador etc;
    private DetalleGrupoControlador dgh;
    private int accion;

    public CRUDGrupoHorarioTest() {
        initComponents();
        inicializar();
        bindeoSalvaje();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlListado = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new org.jdesktop.swingx.JXTable();
        pnlDatos = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblIntegrantes = new org.jdesktop.swingx.JXTable();
        btnAgregar = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("CREACIÓN DE GRUPOS HORARIO");
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 5, 0};
        layout.rowHeights = new int[] {0};
        getContentPane().setLayout(layout);

        pnlListado.setBorder(javax.swing.BorderFactory.createTitledBorder("Grupos"));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0};
        pnlListado.setLayout(jPanel1Layout);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel3.add(btnNuevo);

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel3.add(btnModificar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlListado.add(jPanel3, gridBagConstraints);

        tblTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblTablaMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblTabla);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        pnlListado.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(pnlListado, gridBagConstraints);

        pnlDatos.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del período"));
        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0};
        jPanel2Layout.rowHeights = new int[] {0, 5, 0};
        pnlDatos.setLayout(jPanel2Layout);

        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanel4Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel4.setLayout(jPanel4Layout);

        jLabel1.setText("Código:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        jPanel4.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Integrantes:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        jPanel4.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Nombre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        jPanel4.add(jLabel3, gridBagConstraints);

        jScrollPane3.setViewportView(tblIntegrantes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel4.add(jScrollPane3, gridBagConstraints);

        btnAgregar.setText("+");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(btnAgregar, gridBagConstraints);

        btnQuitar.setText("-");
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        jPanel4.add(btnQuitar, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel4.add(txtCodigo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel4.add(txtNombre, gridBagConstraints);

        jButton1.setText("Cargar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        jPanel4.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel5.add(btnGuardar);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel5.add(btnCancelar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(pnlDatos, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.accion = 0;
        this.controles(accion);
        FormularioUtil.limpiarComponente(this.pnlDatos);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        this.accion = Controlador.NUEVO;
        controlador.prepararCrear();
        this.controles(accion);
        integrantes.clear();
        integrantesT.clear();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        int fila = tblTabla.getSelectedRow();
        if (fila != -1) {
            this.accion = Controlador.MODIFICAR;
            controlador.setSeleccionado(this.listado.get(fila));
            this.controles(accion);
            FormularioUtil.activarComponente(txtCodigo, false);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (FormularioUtil.dialogoConfirmar(this, accion)) {
            GrupoHorario seleccionada = this.controlador.getSeleccionado();

            FormularioUtil.convertirMayusculas(this.pnlDatos);

            if (accion == Controlador.NUEVO) {
                seleccionada.setCodigo(txtCodigo.getText());
            }
            seleccionada.setNombre(txtNombre.getText());

            //CREAMOS LOS DETALLES
//            DetalleGrupoHorario detalle;
//            List<DetalleGrupoHorario> detalles = new ArrayList<>();
//            for (Empleado empleado : integrantes) {
//                detalle = new DetalleGrupoHorario();
//
//                detalle.setGrupoHorario(seleccionada);
//                detalle.setEmpleado(empleado.getNroDocumento());
//
//                detalles.add(detalle);
//            }
//
//            seleccionada.setDetalleGrupoHorarioList(detalles);
            if (controlador.accion(accion)) {
                FormularioUtil.mensajeExito(this, accion);
                this.accion = 0;
                FormularioUtil.limpiarComponente(this.pnlDatos);
                this.integrantes.clear();
                this.integrantesT.clear();
                this.controles(accion);
                this.actualizarTabla();
            } else {
                FormularioUtil.mensajeError(this, accion);
            }

        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        DlgEmpleadoT dialogo = new DlgEmpleadoT(this);
        dialogo.setVisible(true);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void tblTablaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTablaMouseReleased
        // TODO add your handling code here:
        int fila = tblTabla.getSelectedRow();
        if (fila != -1) {
            GrupoHorario grupo = listado.get(fila);

            mostrar(grupo);
        }
    }//GEN-LAST:event_tblTablaMouseReleased

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        // TODO add your handling code here:
        int fila = tblIntegrantes.getSelectedRow();
        if (fila != -1) {
            quitarEmpleado(fila);
        }
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DlgImportarDNI importar = new DlgImportarDNI(this);
        List<String> dnis = importar.obtenerDNI();
        List<EmpleadoT> empleados = etc.buscarPorLista(dnis);
        for (EmpleadoT e : empleados) {
            //Metodo agregar para borrar asignaciones de grupo horario, presenta fallas cuando se hace dos veces click a un grupo horario
            //pendiente a revisar
            //this.borrarEmpleado(e);
            this.agregarEmpleado(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JPanel pnlListado;
    private org.jdesktop.swingx.JXTable tblIntegrantes;
    private org.jdesktop.swingx.JXTable tblTabla;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    private void mostrar(GrupoHorario grupo) {
        txtCodigo.setText(grupo.getCodigo());
        txtNombre.setText(grupo.getNombre());

        List<String> listaDNI = obtenerListadoDNI(grupo.getDetalleGrupoHorarioList());
        if (!listaDNI.isEmpty()) {
            mostrarIntegrantes(listaDNI);
        }

    }

    private void bindeoSalvaje() {
        listado = new ArrayList<>();
        listado = ObservableCollections.observableList(listado);

        integrantes = ObservableCollections.observableList(new ArrayList<Empleado>());
        integrantesT = ObservableCollections.observableList(new ArrayList<EmpleadoT>());
        String[] columnas = {"Código", "Nombre"};
        String[] columnasIntegrantes = {"Nro Documento", "Empleado"};

        MTGrupoHorario mt = new MTGrupoHorario(listado, columnas);
        MTEmpleado mtIntegrantes = new MTEmpleado(integrantes, columnasIntegrantes);
        MTEmpleadoT mtIntegrantesT = new MTEmpleadoT(integrantesT, columnasIntegrantes);
        tblTabla.setModel(mt);
        tblIntegrantes.setModel(mtIntegrantesT);

        actualizarTabla();
    }

    private void actualizarTabla() {
        listado.clear();
        listado.addAll(controlador.buscarTodos());
        tblTabla.packAll();
    }

    private void mostrarIntegrantes(List<String> listadoDNI) {
        //integrantes.clear();
        //integrantes.addAll(ec.buscarPorLista(listadoDNI));
        integrantesT.clear();
        integrantesT.addAll(etc.buscarPorLista(listadoDNI));
        tblIntegrantes.packAll();
    }

    private void inicializar() {
        this.accion = 0;
        dgh = new DetalleGrupoControlador();
        controlador = new GrupoHorarioControlador();
        ec = new EmpleadoControlador();
        etc = new EmpleadoTControlador();
        this.controles(accion);
    }

    private void controles(int accion) {
        boolean bandera = accion == Controlador.NUEVO || accion == Controlador.MODIFICAR;

        FormularioUtil.activarComponente(this.pnlListado, !bandera);
        FormularioUtil.activarComponente(this.pnlDatos, bandera);

        if (accion != Controlador.MODIFICAR) {
            FormularioUtil.limpiarComponente(this.pnlDatos);

        }
    }

    private List<String> obtenerListadoDNI(List<DetalleGrupoHorario> detalles) {
        List<String> listadoDNI = new ArrayList<>();
        for (DetalleGrupoHorario detalle : detalles) {
            listadoDNI.add(detalle.getEmpleado());
        }
        return listadoDNI;
    }

    public void borrarEmpleado(EmpleadoT empleado){
        List<DetalleGrupoHorario> listaDetalles;
        listaDetalles = dgh.buscarXEmpleado(empleado);
        if(!listaDetalles.isEmpty()){
            for (DetalleGrupoHorario listaDetalle : listaDetalles) {
                System.out.println("Dni: "+listaDetalle.getEmpleado()+" GRUPO HORARIO: "+listaDetalle.getGrupoHorario().getNombre());
                dgh.setSeleccionado(listaDetalle);
                if(dgh.accion(3)){
                    System.out.println("Borrado exitoso");
                }
            }
        }
    }
    public void agregarEmpleado(EmpleadoT empleado) {
        if (!integrantesT.contains(empleado)) {
            integrantesT.add(empleado);
                      
            DetalleGrupoHorario detalle = new DetalleGrupoHorario();
            detalle.setEmpleado(empleado.getNroDocumento());
            detalle.setGrupoHorario(controlador.getSeleccionado());
            
            controlador.getSeleccionado().getDetalleGrupoHorarioList().add(detalle);
        }

    }

    private void quitarEmpleado(int fila) {
        String dni = integrantesT.get(fila).getNroDocumento();
        List<DetalleGrupoHorario> asignacionPermisos = controlador.getSeleccionado().getDetalleGrupoHorarioList();
        for(DetalleGrupoHorario asignacionPermiso : asignacionPermisos){
           if(asignacionPermiso.getEmpleado().equals(dni)){
               controlador.getSeleccionado().getDetalleGrupoHorarioList().remove(asignacionPermiso);
               break;
           }
        }
        integrantesT.remove(fila);
        //controlador.getSeleccionado().getDetalleGrupoHorarioList().remove(fila);
    }
}
