/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;


import controladores.Controlador;
import controladores.EmpleadoControlador;
import controladores.PermisoControlador;
import entidades.AsignacionPermiso;
import entidades.Empleado;
import vistas.dialogos.DlgEmpleado;
import com.personal.utiles.FormularioUtil;
import controladores.CompensacionEspecialControlador;
import entidades.CompensacionEspecial;
import entidades.VariacionDia;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import org.jdesktop.observablecollections.ObservableCollections;
import vistas.modelos.MTCompensacion;

/**
 *
 * @author fesquivelc
 */
public class AsignarCompensacion extends javax.swing.JInternalFrame {

    /**
     * Creates new form CRUDPeriodo
     */
    private List<CompensacionEspecial> listado;
    private CompensacionEspecialControlador cec;
    private PermisoControlador controlador;
    private EmpleadoControlador ec;
    private int accion;
    private Empleado empleadoSeleccionado;

    public AsignarCompensacion() {
        initComponents();
        inicializar();
        bindeoSalvaje();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        EntradaLunes = new javax.swing.ButtonGroup();
        SalidaLunes = new javax.swing.ButtonGroup();
        EntradaMartes = new javax.swing.ButtonGroup();
        SalidaMartes = new javax.swing.ButtonGroup();
        EntradaMiercoles = new javax.swing.ButtonGroup();
        SalidaMiercoles = new javax.swing.ButtonGroup();
        EntradaJueves = new javax.swing.ButtonGroup();
        SalidaJueves = new javax.swing.ButtonGroup();
        EntradaViernes = new javax.swing.ButtonGroup();
        SalidaViernes = new javax.swing.ButtonGroup();
        pnlListado = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new org.jdesktop.swingx.JXTable();
        lblBusqueda = new org.jdesktop.swingx.JXBusyLabel();
        txtEmpleado = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        spFechaInicio1 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        spFechaFin1 = new javax.swing.JSpinner();
        btnBuscar = new javax.swing.JButton();
        pnlNavegacion = new javax.swing.JPanel();
        btnPrimero = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        spPagina = new javax.swing.JSpinner();
        txtTotal = new javax.swing.JTextField();
        btnSiguiente = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        cboTamanio = new javax.swing.JComboBox();
        jSeparator3 = new javax.swing.JSeparator();
        pnlDatos = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtEmpleado2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtDocumento = new javax.swing.JTextField();
        pnlOpcion = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        minSalidJueves = new javax.swing.JSpinner();
        minEntraViernes = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        radAumEntraMartes = new javax.swing.JRadioButton();
        radDismEntraMartes = new javax.swing.JRadioButton();
        minEntraMartes = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        radAumSalidMartes = new javax.swing.JRadioButton();
        radDismSalidMartes = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        minEntraLunes = new javax.swing.JSpinner();
        minSalidViernes = new javax.swing.JSpinner();
        jPanel8 = new javax.swing.JPanel();
        radAumEntraLunes = new javax.swing.JRadioButton();
        radDismEntraLunes = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        radAumSalidLunes = new javax.swing.JRadioButton();
        radDismSalidLunes = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        minSalidMartes = new javax.swing.JSpinner();
        jPanel10 = new javax.swing.JPanel();
        radAumEntraMierc = new javax.swing.JRadioButton();
        radDismEntraMierc = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        minEntraJueves = new javax.swing.JSpinner();
        jPanel11 = new javax.swing.JPanel();
        radAumSalidMierc = new javax.swing.JRadioButton();
        radDismSalidMierc = new javax.swing.JRadioButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        minEntraMierc = new javax.swing.JSpinner();
        minSalidMierc = new javax.swing.JSpinner();
        jPanel13 = new javax.swing.JPanel();
        radAumEntraJueves = new javax.swing.JRadioButton();
        radDismEntraJueves = new javax.swing.JRadioButton();
        jPanel14 = new javax.swing.JPanel();
        radAumSalidJueves = new javax.swing.JRadioButton();
        radDismSalidJueves = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        minSalidLunes = new javax.swing.JSpinner();
        jPanel15 = new javax.swing.JPanel();
        radAumEntraViern = new javax.swing.JRadioButton();
        radDismEntraViern = new javax.swing.JRadioButton();
        jPanel16 = new javax.swing.JPanel();
        radAumSalidViern = new javax.swing.JRadioButton();
        radDismSalidViern = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        dcFechaInicio = new com.toedter.calendar.JDateChooser();
        dcFechaFin = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        EntradaLunes.add(radAumEntraLunes);
        EntradaLunes.add(radDismEntraLunes);

        SalidaLunes.add(radAumSalidLunes);
        SalidaLunes.add(radDismSalidLunes);

        EntradaMartes.add(radAumEntraMartes);
        EntradaMartes.add(radDismEntraMartes);

        SalidaMartes.add(radAumSalidMartes);
        SalidaMartes.add(radDismSalidMartes);

        EntradaMiercoles.add(radAumEntraMierc);
        EntradaMiercoles.add(radDismEntraMierc);

        SalidaMiercoles.add(radAumSalidMierc);
        SalidaMiercoles.add(radDismSalidMierc);

        EntradaJueves.add(radAumEntraJueves);
        EntradaJueves.add(radDismEntraJueves);

        SalidaJueves.add(radAumSalidJueves);
        SalidaJueves.add(radDismSalidJueves);

        EntradaViernes.add(radAumEntraViern);
        EntradaViernes.add(radDismEntraViern);

        SalidaViernes.add(radAumSalidViern);
        SalidaViernes.add(radDismSalidViern);

        setClosable(true);
        setMaximizable(true);
        setTitle("ASIGNAR VARIACION DE HORAS PARA HORARIOS ESPECIALES");
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 5, 0};
        layout.rowHeights = new int[] {0};
        getContentPane().setLayout(layout);

        pnlListado.setBorder(javax.swing.BorderFactory.createTitledBorder("Permisos"));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0};
        pnlListado.setLayout(jPanel1Layout);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel3.add(btnNuevo);

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel3.add(btnModificar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 15;
        pnlListado.add(jPanel3, gridBagConstraints);

        tblTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblTablaMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblTabla);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        pnlListado.add(jScrollPane1, gridBagConstraints);

        lblBusqueda.setText("Empleado");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(lblBusqueda, gridBagConstraints);

        txtEmpleado.setEditable(false);
        txtEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpleadoActionPerformed(evt);
            }
        });
        txtEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmpleadoKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        pnlListado.add(txtEmpleado, gridBagConstraints);

        jButton4.setText("...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(jButton4, gridBagConstraints);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(btnLimpiar, gridBagConstraints);

        spFechaInicio1.setModel(new javax.swing.SpinnerDateModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(spFechaInicio1, gridBagConstraints);

        jLabel9.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(jLabel9, gridBagConstraints);

        spFechaFin1.setModel(new javax.swing.SpinnerDateModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(spFechaFin1, gridBagConstraints);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pnlListado.add(btnBuscar, gridBagConstraints);

        pnlNavegacion.setLayout(new java.awt.GridLayout(1, 0, 2, 0));

        btnPrimero.setText("<<");
        btnPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeroActionPerformed(evt);
            }
        });
        pnlNavegacion.add(btnPrimero);

        btnAnterior.setText("<");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });
        pnlNavegacion.add(btnAnterior);

        spPagina.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        spPagina.setMinimumSize(new java.awt.Dimension(60, 20));
        spPagina.setPreferredSize(new java.awt.Dimension(60, 20));
        spPagina.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spPaginaStateChanged(evt);
            }
        });
        pnlNavegacion.add(spPagina);

        txtTotal.setEditable(false);
        txtTotal.setColumns(3);
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setText("1");
        pnlNavegacion.add(txtTotal);

        btnSiguiente.setText(">");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });
        pnlNavegacion.add(btnSiguiente);

        btnUltimo.setText(">>");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });
        pnlNavegacion.add(btnUltimo);

        cboTamanio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "15", "20", "25", "40", "50" }));
        cboTamanio.setMinimumSize(new java.awt.Dimension(53, 24));
        cboTamanio.setPreferredSize(new java.awt.Dimension(53, 24));
        cboTamanio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTamanioActionPerformed(evt);
            }
        });
        pnlNavegacion.add(cboTamanio);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 15;
        pnlListado.add(pnlNavegacion, gridBagConstraints);
        pnlListado.add(jSeparator3, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(pnlListado, gridBagConstraints);

        pnlDatos.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de variacion de horario"));
        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0};
        jPanel2Layout.rowHeights = new int[] {0, 5, 0};
        pnlDatos.setLayout(jPanel2Layout);

        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanel4Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel4.setLayout(jPanel4Layout);

        jLabel1.setText("Empleado:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel1, gridBagConstraints);

        txtEmpleado2.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel4.add(txtEmpleado2, gridBagConstraints);

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        jPanel4.add(jButton1, gridBagConstraints);

        jLabel10.setText("Documento:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(txtDocumento, gridBagConstraints);

        pnlOpcion.setLayout(new java.awt.GridLayout(1, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(pnlOpcion, gridBagConstraints);

        jLabel5.setText("Lunes:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel5, gridBagConstraints);

        jLabel13.setText("Minutos salida:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel13, gridBagConstraints);

        jLabel3.setText("Martes:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel3, gridBagConstraints);

        jLabel7.setText("Minutos entrada:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 19;
        jPanel4.add(jLabel7, gridBagConstraints);

        minSalidJueves.setMinimumSize(new java.awt.Dimension(40, 20));
        minSalidJueves.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 18;
        jPanel4.add(minSalidJueves, gridBagConstraints);

        minEntraViernes.setMinimumSize(new java.awt.Dimension(40, 20));
        minEntraViernes.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 19;
        jPanel4.add(minEntraViernes, gridBagConstraints);

        radAumEntraMartes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radAumEntraMartes.setText("+");
        radAumEntraMartes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radAumEntraMartesActionPerformed(evt);
            }
        });
        jPanel6.add(radAumEntraMartes);

        radDismEntraMartes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radDismEntraMartes.setText("-");
        radDismEntraMartes.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        radDismEntraMartes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radDismEntraMartesActionPerformed(evt);
            }
        });
        jPanel6.add(radDismEntraMartes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jPanel6, gridBagConstraints);

        minEntraMartes.setMinimumSize(new java.awt.Dimension(40, 20));
        minEntraMartes.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 13;
        jPanel4.add(minEntraMartes, gridBagConstraints);

        radAumSalidMartes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radAumSalidMartes.setText("+");
        jPanel7.add(radAumSalidMartes);

        radDismSalidMartes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radDismSalidMartes.setText("-");
        radDismSalidMartes.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel7.add(radDismSalidMartes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jPanel7, gridBagConstraints);

        jLabel4.setText("Miercoles:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel4, gridBagConstraints);

        jLabel8.setText("Jueves:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel8, gridBagConstraints);

        jLabel11.setText("Viernes:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel11, gridBagConstraints);

        jLabel15.setText("Minutos salida:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel15, gridBagConstraints);

        minEntraLunes.setMinimumSize(new java.awt.Dimension(40, 20));
        minEntraLunes.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        jPanel4.add(minEntraLunes, gridBagConstraints);

        minSalidViernes.setMinimumSize(new java.awt.Dimension(40, 20));
        minSalidViernes.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 20;
        jPanel4.add(minSalidViernes, gridBagConstraints);

        radAumEntraLunes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radAumEntraLunes.setText("+");
        radAumEntraLunes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radAumEntraLunesActionPerformed(evt);
            }
        });
        jPanel8.add(radAumEntraLunes);

        radDismEntraLunes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radDismEntraLunes.setText("-");
        radDismEntraLunes.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        radDismEntraLunes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radDismEntraLunesActionPerformed(evt);
            }
        });
        jPanel8.add(radDismEntraLunes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jPanel8, gridBagConstraints);

        radAumSalidLunes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radAumSalidLunes.setText("+");
        jPanel9.add(radAumSalidLunes);

        radDismSalidLunes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radDismSalidLunes.setText("-");
        radDismSalidLunes.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel9.add(radDismSalidLunes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jPanel9, gridBagConstraints);

        jLabel16.setText("Minutos entrada:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 13;
        jPanel4.add(jLabel16, gridBagConstraints);

        minSalidMartes.setMinimumSize(new java.awt.Dimension(40, 20));
        minSalidMartes.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 14;
        jPanel4.add(minSalidMartes, gridBagConstraints);

        radAumEntraMierc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radAumEntraMierc.setText("+");
        radAumEntraMierc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radAumEntraMiercActionPerformed(evt);
            }
        });
        jPanel10.add(radAumEntraMierc);

        radDismEntraMierc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radDismEntraMierc.setText("-");
        radDismEntraMierc.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        radDismEntraMierc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radDismEntraMiercActionPerformed(evt);
            }
        });
        jPanel10.add(radDismEntraMierc);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jPanel10, gridBagConstraints);

        jLabel17.setText("Minutos salida:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel17, gridBagConstraints);

        minEntraJueves.setMinimumSize(new java.awt.Dimension(40, 20));
        minEntraJueves.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 17;
        jPanel4.add(minEntraJueves, gridBagConstraints);

        radAumSalidMierc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radAumSalidMierc.setText("+");
        jPanel11.add(radAumSalidMierc);

        radDismSalidMierc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radDismSalidMierc.setText("-");
        radDismSalidMierc.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel11.add(radDismSalidMierc);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jPanel11, gridBagConstraints);

        jLabel19.setText("Minutos entrada:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 15;
        jPanel4.add(jLabel19, gridBagConstraints);

        jLabel20.setText("Minutos salida:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel20, gridBagConstraints);

        minEntraMierc.setMinimumSize(new java.awt.Dimension(40, 20));
        minEntraMierc.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 15;
        jPanel4.add(minEntraMierc, gridBagConstraints);

        minSalidMierc.setMinimumSize(new java.awt.Dimension(40, 20));
        minSalidMierc.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 16;
        jPanel4.add(minSalidMierc, gridBagConstraints);

        radAumEntraJueves.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radAumEntraJueves.setText("+");
        radAumEntraJueves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radAumEntraJuevesActionPerformed(evt);
            }
        });
        jPanel13.add(radAumEntraJueves);

        radDismEntraJueves.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radDismEntraJueves.setText("-");
        radDismEntraJueves.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        radDismEntraJueves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radDismEntraJuevesActionPerformed(evt);
            }
        });
        jPanel13.add(radDismEntraJueves);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jPanel13, gridBagConstraints);

        radAumSalidJueves.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radAumSalidJueves.setText("+");
        jPanel14.add(radAumSalidJueves);

        radDismSalidJueves.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radDismSalidJueves.setText("-");
        radDismSalidJueves.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel14.add(radDismSalidJueves);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jPanel14, gridBagConstraints);
        jPanel4.add(jSeparator1, new java.awt.GridBagConstraints());

        jLabel21.setText("Minutos entrada:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 17;
        jPanel4.add(jLabel21, gridBagConstraints);

        jLabel22.setText("Minutos salida:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel22, gridBagConstraints);

        minSalidLunes.setMinimumSize(new java.awt.Dimension(40, 20));
        minSalidLunes.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 12;
        jPanel4.add(minSalidLunes, gridBagConstraints);

        radAumEntraViern.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radAumEntraViern.setText("+");
        radAumEntraViern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radAumEntraViernActionPerformed(evt);
            }
        });
        jPanel15.add(radAumEntraViern);

        radDismEntraViern.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radDismEntraViern.setText("-");
        radDismEntraViern.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        radDismEntraViern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radDismEntraViernActionPerformed(evt);
            }
        });
        jPanel15.add(radDismEntraViern);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jPanel15, gridBagConstraints);

        radAumSalidViern.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radAumSalidViern.setText("+");
        jPanel16.add(radAumSalidViern);

        radDismSalidViern.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radDismSalidViern.setText("-");
        radDismSalidViern.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel16.add(radDismSalidViern);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jPanel16, gridBagConstraints);

        jLabel2.setText("Fecha de inicio:");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel2, gridBagConstraints);

        dcFechaInicio.setMinimumSize(new java.awt.Dimension(89, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(dcFechaInicio, gridBagConstraints);

        dcFechaFin.setMinimumSize(new java.awt.Dimension(89, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(dcFechaFin, gridBagConstraints);

        jLabel6.setText("Fecha de fin:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel6, gridBagConstraints);

        jLabel18.setText("Minutos entrada:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel4.add(jLabel18, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel5.add(btnGuardar);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel5.add(btnCancelar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlDatos.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(pnlDatos, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.accion = 0;
        this.controles(accion);
        FormularioUtil.limpiarComponente(this.pnlDatos);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        this.accion = Controlador.NUEVO;
        controlador.prepararCrear();
        cec.prepararCrear();
        this.controles(accion);
        /**
         * Codigo para limpiar
         */
        //poniendo a cero todo
        minEntraLunes.setValue(0);
        minSalidLunes.setValue(0);
        EntradaLunes.clearSelection();
        SalidaLunes.clearSelection();
        //=====
        minEntraMartes.setValue(0);
        minSalidMartes.setValue(0);
        EntradaMartes.clearSelection();
        SalidaMartes.clearSelection();
        //===
        minEntraMierc.setValue(0);
        minSalidMierc.setValue(0);
        EntradaMiercoles.clearSelection();
        SalidaMiercoles.clearSelection();
        //===
        minEntraJueves.setValue(0);
        minSalidJueves.setValue(0);
        EntradaJueves.clearSelection();
        SalidaJueves.clearSelection();
        //===
        minEntraViernes.setValue(0);
        minSalidViernes.setValue(0);
        EntradaViernes.clearSelection();
        SalidaViernes.clearSelection();
        //
//        integrantes.clear();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        int fila = tblTabla.getSelectedRow();
        if (fila != -1) {
            this.accion = Controlador.MODIFICAR;
            //tipoSeleccionado = this.listado.get(fila).getPermiso().getTipoPermiso();
            cec.setSeleccionado(this.listado.get(fila));
            empleadoSeleccionado = ec.buscarPorDni(this.listado.get(fila).getDni());
            this.controles(accion);
            FormularioUtil.activarComponente(txtEmpleado2, false);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (erroresFormulario()) {
            return;
        }
        if (FormularioUtil.dialogoConfirmar(this, accion)) {
            //Permiso seleccionada = this.controlador.getSeleccionado();
            CompensacionEspecial seleccionada = cec.getSeleccionado();
            FormularioUtil.convertirMayusculas(this.pnlDatos);

//            if (accion == Controlador.NUEVO) {
//                seleccionada.setCodigo(txtTipoPermiso.getText());
//            }
            //seleccionada.setMotivo(txtMotivo.getText());
            seleccionada.setDocumento(txtDocumento.getText());
            seleccionada.setFechaInicio(dcFechaInicio.getDate());
            if(dcFechaFin.getDate()!= null){
                seleccionada.setFechaFin(dcFechaFin.getDate());
            }else{
                seleccionada.setFechaFin(null);
            }
            seleccionada.setDni(empleadoSeleccionado.getNroDocumento());
            //Creacion de variacionDia
            if(accion==1){
                List<VariacionDia> diasVariacion = new ArrayList<>();
                if((int)minEntraLunes.getValue() != 0 || (int)minSalidLunes.getValue() != 0){
                    VariacionDia variacion = new VariacionDia();
                    variacion.setDia(2);
                    variacion.setAumentaEntrada(radAumEntraLunes.isSelected());
                    variacion.setDisminuyeEntrada(radDismEntraLunes.isSelected());
                    variacion.setAumentaSalida(radAumSalidLunes.isSelected());
                    variacion.setDisminuyeSalida(radDismSalidLunes.isSelected());
                    variacion.setCompensacionId(seleccionada);
                    variacion.setMinutosEntrada((int)minEntraLunes.getValue());
                    variacion.setMinutosSalida((int)minSalidLunes.getValue());
                    diasVariacion.add(variacion);
                }
                if((int)minEntraMartes.getValue() != 0 || (int)minSalidMartes.getValue() != 0){
                    VariacionDia variacion = new VariacionDia();
                    variacion.setDia(3);
                    variacion.setAumentaEntrada(radAumEntraMartes.isSelected());
                    variacion.setDisminuyeEntrada(radDismEntraMartes.isSelected());
                    variacion.setAumentaSalida(radAumSalidMartes.isSelected());
                    variacion.setDisminuyeSalida(radDismSalidMartes.isSelected());
                    variacion.setCompensacionId(seleccionada);
                    variacion.setMinutosEntrada((int)minEntraMartes.getValue());
                    variacion.setMinutosSalida((int)minSalidMartes.getValue());
                    diasVariacion.add(variacion);
                }
                if((int)minEntraMierc.getValue() != 0 || (int)minSalidMierc.getValue() != 0){
                    VariacionDia variacion = new VariacionDia();
                    variacion.setDia(4);
                    variacion.setAumentaEntrada(radAumEntraMierc.isSelected());
                    variacion.setDisminuyeEntrada(radDismEntraMierc.isSelected());
                    variacion.setAumentaSalida(radAumSalidMierc.isSelected());
                    variacion.setDisminuyeSalida(radDismSalidMierc.isSelected());
                    variacion.setCompensacionId(seleccionada);
                    variacion.setMinutosEntrada((int)minEntraMierc.getValue());
                    variacion.setMinutosSalida((int)minSalidMierc.getValue());
                    diasVariacion.add(variacion);
                }
                if((int)minEntraJueves.getValue() != 0 || (int)minSalidJueves.getValue() != 0){
                    VariacionDia variacion = new VariacionDia();
                    variacion.setDia(5);
                    variacion.setAumentaEntrada(radAumEntraJueves.isSelected());
                    variacion.setDisminuyeEntrada(radDismEntraJueves.isSelected());
                    variacion.setAumentaSalida(radAumSalidJueves.isSelected());
                    variacion.setDisminuyeSalida(radDismSalidJueves.isSelected());
                    variacion.setCompensacionId(seleccionada);
                    variacion.setMinutosEntrada((int)minEntraJueves.getValue());
                    variacion.setMinutosSalida((int)minSalidJueves.getValue());
                    diasVariacion.add(variacion);
                }
                if((int)minEntraViernes.getValue() != 0 || (int)minSalidViernes.getValue() != 0){
                    VariacionDia variacion = new VariacionDia();
                    variacion.setDia(6);
                    variacion.setAumentaEntrada(radAumEntraViern.isSelected());
                    variacion.setDisminuyeEntrada(radDismEntraViern.isSelected());
                    variacion.setAumentaSalida(radAumSalidViern.isSelected());
                    variacion.setDisminuyeSalida(radDismSalidViern.isSelected());
                    variacion.setCompensacionId(seleccionada);
                    variacion.setMinutosEntrada((int)minEntraViernes.getValue());
                    variacion.setMinutosSalida((int)minSalidViernes.getValue());
                    diasVariacion.add(variacion);
                }
            //Asignamos las variaciones
                seleccionada.setVariacionDiaList(diasVariacion);
            }else if(accion==2){
                List<VariacionDia> variaciones = seleccionada.getVariacionDiaList();
                for (VariacionDia variacion : variaciones) {
                    switch(variacion.getDia()){
                        case 2:
                            //seleccionada.getVariacionDiaList().remove(variacion);
                            variacion.setAumentaEntrada(radAumEntraLunes.isSelected());
                            variacion.setDisminuyeEntrada(radDismEntraLunes.isSelected());
                            variacion.setAumentaSalida(radAumSalidLunes.isSelected());
                            variacion.setDisminuyeSalida(radDismSalidLunes.isSelected());
                            variacion.setMinutosEntrada((int)minEntraLunes.getValue());
                            variacion.setMinutosSalida((int)minSalidLunes.getValue());
                           // seleccionada.getVariacionDiaList().add(variacion);
                            break;
                        case 3:
                            //seleccionada.getVariacionDiaList().remove(variacion);
                            variacion.setAumentaEntrada(radAumEntraMartes.isSelected());
                            variacion.setDisminuyeEntrada(radDismEntraMartes.isSelected());
                            variacion.setAumentaSalida(radAumSalidMartes.isSelected());
                            variacion.setDisminuyeSalida(radDismSalidMartes.isSelected());
                            variacion.setMinutosEntrada((int)minEntraMartes.getValue());
                            variacion.setMinutosSalida((int)minSalidMartes.getValue());
                            //seleccionada.getVariacionDiaList().add(variacion);
                            break;
                        case 4:
                            //seleccionada.getVariacionDiaList().remove(variacion);
                            variacion.setAumentaEntrada(radAumEntraMierc.isSelected());
                            variacion.setDisminuyeEntrada(radDismEntraMierc.isSelected());
                            variacion.setAumentaSalida(radAumSalidMierc.isSelected());
                            variacion.setDisminuyeSalida(radDismSalidMierc.isSelected());
                            variacion.setMinutosEntrada((int)minEntraMierc.getValue());
                            variacion.setMinutosSalida((int)minSalidMierc.getValue());
                            //seleccionada.getVariacionDiaList().add(variacion);
                            break;
                        case 5:
                            //seleccionada.getVariacionDiaList().remove(variacion);
                            variacion.setAumentaEntrada(radAumEntraJueves.isSelected());
                            variacion.setDisminuyeEntrada(radDismEntraJueves.isSelected());
                            variacion.setAumentaSalida(radAumSalidJueves.isSelected());
                            variacion.setDisminuyeSalida(radDismSalidJueves.isSelected());
                            variacion.setMinutosEntrada((int)minEntraJueves.getValue());
                            variacion.setMinutosSalida((int)minSalidJueves.getValue());
                            //seleccionada.getVariacionDiaList().add(variacion);
                            break;
                        case 6:
                            //seleccionada.getVariacionDiaList().remove(variacion);
                            variacion.setAumentaEntrada(radAumEntraViern.isSelected());
                            variacion.setDisminuyeEntrada(radDismEntraViern.isSelected());
                            variacion.setAumentaSalida(radAumSalidViern.isSelected());
                            variacion.setDisminuyeSalida(radDismSalidViern.isSelected());
                            variacion.setMinutosEntrada((int)minEntraViernes.getValue());
                            variacion.setMinutosSalida((int)minSalidViernes.getValue());
                            //seleccionada.getVariacionDiaList().add(variacion);
                            break;
                    }
                }
            }
            

            //retrocederTiempo(dnis, seleccionada.getFechaInicio());

            if (cec.accion(accion)) {
                FormularioUtil.mensajeExito(this, accion);
                this.accion = 0;
                FormularioUtil.limpiarComponente(this.pnlDatos);
//                this.integrantes.clear();
                this.controles(accion);
                this.actualizarTabla();

                
            } else {
                FormularioUtil.mensajeError(this, accion);
            }

        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tblTablaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTablaMouseReleased
        // TODO add your handling code here:
        int fila = tblTabla.getSelectedRow();
        if (fila != -1) {
            CompensacionEspecial compensacion = listado.get(fila);
            mostrar(compensacion);
            //FormularioUtil.activarComponente(this.btnImprimirTodo, true);
        }
    }//GEN-LAST:event_tblTablaMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DlgEmpleado seleccion = new DlgEmpleado(this);
        empleadoSeleccionado = seleccion.getSeleccionado();
        if (empleadoSeleccionado != null) {
            txtEmpleado2.setText(empleadoSeleccionado.getApellidoPaterno() + " " + empleadoSeleccionado.getApellidoMaterno() + " " + empleadoSeleccionado.getNombre());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtEmpleadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpleadoKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            lblBusqueda.setBusy(true);
            buscar();
            lblBusqueda.setBusy(false);
        }
    }//GEN-LAST:event_txtEmpleadoKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DlgEmpleado dialogo = new DlgEmpleado(this);
        dialogo.setAgregar(false);
        this.empleadoSeleccionado = dialogo.getSeleccionado();
        if (this.empleadoSeleccionado != null) {
            this.txtEmpleado.setText(
                    empleadoSeleccionado.getNroDocumento()
                    + " " + empleadoSeleccionado.getApellidoPaterno()
                    + " " + empleadoSeleccionado.getApellidoMaterno()
                    + " " + empleadoSeleccionado.getNombre());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        FormularioUtil.limpiarComponente(this.txtEmpleado);
        this.empleadoSeleccionado = null;
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        System.out.println("BUSCAR");
        lblBusqueda.setBusy(true);
        paginaActual = 1;
        buscar();
        actualizarControlesNavegacion();
        lblBusqueda.setBusy(false);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeroActionPerformed
        // TODO add your handling code here:
        primero();
    }//GEN-LAST:event_btnPrimeroActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        // TODO add your handling code here:
        anterior();
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void spPaginaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spPaginaStateChanged
        // TODO add your handling code here:
        this.seleccionPagina();
    }//GEN-LAST:event_spPaginaStateChanged

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
        siguiente();
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        // TODO add your handling code here:
        ultimo();
    }//GEN-LAST:event_btnUltimoActionPerformed

    private void cboTamanioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTamanioActionPerformed
        // TODO add your handling code here:
        this.paginaActual = 1;
        buscar();
        this.actualizarControlesNavegacion();
    }//GEN-LAST:event_cboTamanioActionPerformed

    private void txtEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpleadoActionPerformed

    private void radAumEntraMartesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radAumEntraMartesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radAumEntraMartesActionPerformed

    private void radDismEntraMartesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radDismEntraMartesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radDismEntraMartesActionPerformed

    private void radAumEntraLunesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radAumEntraLunesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radAumEntraLunesActionPerformed

    private void radDismEntraLunesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radDismEntraLunesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radDismEntraLunesActionPerformed

    private void radAumEntraMiercActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radAumEntraMiercActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radAumEntraMiercActionPerformed

    private void radDismEntraMiercActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radDismEntraMiercActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radDismEntraMiercActionPerformed

    private void radAumEntraJuevesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radAumEntraJuevesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radAumEntraJuevesActionPerformed

    private void radDismEntraJuevesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radDismEntraJuevesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radDismEntraJuevesActionPerformed

    private void radAumEntraViernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radAumEntraViernActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radAumEntraViernActionPerformed

    private void radDismEntraViernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radDismEntraViernActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radDismEntraViernActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup EntradaJueves;
    private javax.swing.ButtonGroup EntradaLunes;
    private javax.swing.ButtonGroup EntradaMartes;
    private javax.swing.ButtonGroup EntradaMiercoles;
    private javax.swing.ButtonGroup EntradaViernes;
    private javax.swing.ButtonGroup SalidaJueves;
    private javax.swing.ButtonGroup SalidaLunes;
    private javax.swing.ButtonGroup SalidaMartes;
    private javax.swing.ButtonGroup SalidaMiercoles;
    private javax.swing.ButtonGroup SalidaViernes;
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnPrimero;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JComboBox cboTamanio;
    private com.toedter.calendar.JDateChooser dcFechaFin;
    private com.toedter.calendar.JDateChooser dcFechaInicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private org.jdesktop.swingx.JXBusyLabel lblBusqueda;
    private javax.swing.JSpinner minEntraJueves;
    private javax.swing.JSpinner minEntraLunes;
    private javax.swing.JSpinner minEntraMartes;
    private javax.swing.JSpinner minEntraMierc;
    private javax.swing.JSpinner minEntraViernes;
    private javax.swing.JSpinner minSalidJueves;
    private javax.swing.JSpinner minSalidLunes;
    private javax.swing.JSpinner minSalidMartes;
    private javax.swing.JSpinner minSalidMierc;
    private javax.swing.JSpinner minSalidViernes;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JPanel pnlListado;
    private javax.swing.JPanel pnlNavegacion;
    private javax.swing.JPanel pnlOpcion;
    private javax.swing.JRadioButton radAumEntraJueves;
    private javax.swing.JRadioButton radAumEntraLunes;
    private javax.swing.JRadioButton radAumEntraMartes;
    private javax.swing.JRadioButton radAumEntraMierc;
    private javax.swing.JRadioButton radAumEntraViern;
    private javax.swing.JRadioButton radAumSalidJueves;
    private javax.swing.JRadioButton radAumSalidLunes;
    private javax.swing.JRadioButton radAumSalidMartes;
    private javax.swing.JRadioButton radAumSalidMierc;
    private javax.swing.JRadioButton radAumSalidViern;
    private javax.swing.JRadioButton radDismEntraJueves;
    private javax.swing.JRadioButton radDismEntraLunes;
    private javax.swing.JRadioButton radDismEntraMartes;
    private javax.swing.JRadioButton radDismEntraMierc;
    private javax.swing.JRadioButton radDismEntraViern;
    private javax.swing.JRadioButton radDismSalidJueves;
    private javax.swing.JRadioButton radDismSalidLunes;
    private javax.swing.JRadioButton radDismSalidMartes;
    private javax.swing.JRadioButton radDismSalidMierc;
    private javax.swing.JRadioButton radDismSalidViern;
    private javax.swing.JSpinner spFechaFin1;
    private javax.swing.JSpinner spFechaInicio1;
    private javax.swing.JSpinner spPagina;
    private org.jdesktop.swingx.JXTable tblTabla;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtEmpleado;
    private javax.swing.JTextField txtEmpleado2;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private List<VariacionDia> listaVariacion;    
    private void mostrar(CompensacionEspecial compensacion) {
        Empleado e = ec.buscarPorDni(compensacion.getDni());
        txtDocumento.setText(compensacion.getDocumento());
        txtEmpleado2.setText(e.getApellidoPaterno() + " " + e.getApellidoMaterno() + " " + e.getNombre());
        dcFechaInicio.setDate(compensacion.getFechaInicio());
        dcFechaFin.setDate(compensacion.getFechaFin());
        //poniendo a cero todo
        minEntraLunes.setValue(0);
        minSalidLunes.setValue(0);
        EntradaLunes.clearSelection();
        SalidaLunes.clearSelection();
        //=====
        minEntraMartes.setValue(0);
        minSalidMartes.setValue(0);
        EntradaMartes.clearSelection();
        SalidaMartes.clearSelection();
        //===
        minEntraMierc.setValue(0);
        minSalidMierc.setValue(0);
        EntradaMiercoles.clearSelection();
        SalidaMiercoles.clearSelection();
        //===
        minEntraJueves.setValue(0);
        minSalidJueves.setValue(0);
        EntradaJueves.clearSelection();
        SalidaJueves.clearSelection();
        //===
        minEntraViernes.setValue(0);
        minSalidViernes.setValue(0);
        EntradaViernes.clearSelection();
        SalidaViernes.clearSelection();
        //
        listaVariacion = compensacion.getVariacionDiaList();
        System.out.println("cantidad: "+listaVariacion.size());
        for (VariacionDia v : listaVariacion) {
            switch(v.getDia()){
                case 2:
                    minEntraLunes.setValue(v.getMinutosEntrada());
                    minSalidLunes.setValue(v.getMinutosSalida());
                    radAumEntraLunes.setSelected(v.getAumentaEntrada());
                    radDismEntraLunes.setSelected(v.getDisminuyeEntrada());
                    radAumSalidLunes.setSelected(v.getAumentaSalida());
                    radDismSalidLunes.setSelected(v.getDisminuyeSalida());
                    break;
                case 3:
                    minEntraMartes.setValue(v.getMinutosEntrada());
                    minSalidMartes.setValue(v.getMinutosSalida());
                    radAumEntraMartes.setSelected(v.getAumentaEntrada());
                    radDismEntraMartes.setSelected(v.getDisminuyeEntrada());
                    radAumSalidMartes.setSelected(v.getAumentaSalida());
                    radDismSalidMartes.setSelected(v.getDisminuyeSalida());
                    break;
                case 4:
                    minEntraMierc.setValue(v.getMinutosEntrada());
                    minSalidMierc.setValue(v.getMinutosSalida());
                    radAumEntraMierc.setSelected(v.getAumentaEntrada());
                    radDismEntraMierc.setSelected(v.getDisminuyeEntrada());
                    radAumSalidMierc.setSelected(v.getAumentaSalida());
                    radDismSalidMierc.setSelected(v.getDisminuyeSalida());
                    break;
                case 5:
                    minEntraJueves.setValue(v.getMinutosEntrada());
                    minSalidJueves.setValue(v.getMinutosSalida());
                    radAumEntraJueves.setSelected(v.getAumentaEntrada());
                    radDismEntraJueves.setSelected(v.getDisminuyeEntrada());
                    radAumSalidJueves.setSelected(v.getAumentaSalida());
                    radDismSalidJueves.setSelected(v.getDisminuyeSalida());
                    break;
                case 6:
                    minEntraViernes.setValue(v.getMinutosEntrada());
                    minSalidViernes.setValue(v.getMinutosSalida());
                    radAumEntraViern.setSelected(v.getAumentaEntrada());
                    radDismEntraViern.setSelected(v.getDisminuyeEntrada());
                    radAumSalidViern.setSelected(v.getAumentaSalida());
                    radDismSalidViern.setSelected(v.getDisminuyeSalida());
                    break;
            }
        }
    }

    private void bindeoSalvaje() {
        listado = new ArrayList<>();
        listado = ObservableCollections.observableList(listado);


        //String[] columnasIntegrantes = {"Nro Documento", "Empleado"};

        MTCompensacion mt = new MTCompensacion(listado);
        //MTEmpleado mtIntegrantes = new MTEmpleado(integrantes, columnasIntegrantes);
        tblTabla.setModel(mt);
        //tblEmpleados.setModel(mtIntegrantes);

        actualizarTabla();
    }

    private void actualizarTabla() {
        listado.clear();
        empleadoSeleccionado = null;
        FormularioUtil.limpiarComponente(txtEmpleado);
        paginaActual = 1;
        buscar();
        actualizarControlesNavegacion();
        tblTabla.packAll();
    }

    private void inicializar() {
        this.accion = 0;

        controlador = new PermisoControlador();
        ec = new EmpleadoControlador();
        cec = new CompensacionEspecialControlador();
        FormularioUtil.modeloSpinnerFechaHora(spFechaInicio1, "dd/MM/yyyy");
        FormularioUtil.modeloSpinnerFechaHora(spFechaFin1, "dd/MM/yyyy");
        this.controles(accion);
    }

    private void controles(int accion) {
        boolean bandera = accion == Controlador.NUEVO || accion == Controlador.MODIFICAR;

        FormularioUtil.activarComponente(this.pnlListado, !bandera);
        FormularioUtil.activarComponente(this.pnlDatos, bandera);

        if (accion != Controlador.MODIFICAR) {
            FormularioUtil.limpiarComponente(this.pnlDatos);
        }

        this.txtEmpleado2.setEditable(false);
        checkPorFecha(accion);
    }

    public void agregarEmpleado(Empleado empleado) {
        //integrantes.add(empleado);

        AsignacionPermiso detalle = new AsignacionPermiso();
        detalle.setEmpleado(empleado.getNroDocumento());
        detalle.setPermiso(controlador.getSeleccionado());

        controlador.getSeleccionado().getAsignacionPermisoList().add(detalle);
    }


    private int paginaActual = 1;
    private int totalPaginas = 0;
    private int tamanioPagina = 0;

    private void buscar() {
        String busqueda = txtEmpleado.getText();
        tamanioPagina = Integer.parseInt(cboTamanio.getSelectedItem().toString());

        Date fechaInicio = (Date) spFechaInicio1.getValue();
        Date fechaFin = (Date) spFechaFin1.getValue();
        listado.clear();
        List<CompensacionEspecial> lista = this.listar(empleadoSeleccionado, fechaInicio, fechaFin, paginaActual, tamanioPagina);
        System.out.println("LISTA: " + lista.size());
        listado.addAll(lista);

        tblTabla.packAll();
    }

    private List<CompensacionEspecial> listar(Empleado empleado, Date fechaInicio, Date fechaFin, int pagina, int tamanio) {
        int total;

        if (empleado == null) {
            total = cec.contarXFecha(fechaInicio, fechaFin);
        } else {
            total = cec.contarXEmpleadoXFecha(empleado.getNroDocumento(), fechaInicio, fechaFin);
        }

        if (total % tamanio == 0) {
            totalPaginas = total / tamanio;
        } else {
            totalPaginas = (total / tamanio) + 1;
        }

        if (totalPaginas == 0) {
            totalPaginas = 1;
        }

        if (empleado == null) {
            return cec.buscarXFecha(fechaInicio, fechaFin, (pagina - 1) * tamanio, tamanio);
        } else {
            return cec.buscarXEmpleadoXFecha(empleado.getNroDocumento(), fechaInicio, fechaFin, (pagina - 1) * tamanio, tamanio);
        }

    }

    private void siguiente() {
        paginaActual++;
        buscar();
        this.actualizarControlesNavegacion();
    }

    private void ultimo() {
        paginaActual = totalPaginas;
        buscar();
        this.actualizarControlesNavegacion();
    }

    private void primero() {
        paginaActual = 1;
        buscar();
        this.actualizarControlesNavegacion();
    }

    private void anterior() {
        paginaActual--;
        buscar();
        this.actualizarControlesNavegacion();
    }

    private void seleccionPagina() {
        paginaActual = (int) spPagina.getValue();
        buscar();
        this.actualizarControlesNavegacion();
    }

    private void actualizarControlesNavegacion() {
        spPagina.setValue(paginaActual);
        txtTotal.setText(totalPaginas + "");

        SpinnerNumberModel modeloSP = (SpinnerNumberModel) spPagina.getModel();
        Comparable<Integer> maximo = totalPaginas;
        modeloSP.setMaximum(maximo);

        this.btnSiguiente.setEnabled(paginaActual != totalPaginas);
        this.btnUltimo.setEnabled(paginaActual != totalPaginas);

        this.btnAnterior.setEnabled(paginaActual != 1);
        this.btnPrimero.setEnabled(paginaActual != 1);
    }
    
    private void checkPorFecha(int accion) {
        if (accion != 0) {
            FormularioUtil.activarComponente(dcFechaInicio, true);
            //FormularioUtil.activarComponente(dcFechaFin, radFecha.isSelected());

            //spHoraInicio.setEnabled(!radFecha.isSelected());
            //spHoraFin.setEnabled(!radFecha.isSelected());
        }
    }

    private boolean erroresFormulario() {
        int errores = 0;
        Date fechaInicio = dcFechaInicio.getDate();

        String mensaje = "";
        if (empleadoSeleccionado==null) {
            errores++;
            mensaje = ">Debe seleccionar uno o mas empleados\n";
        }
        if(dcFechaInicio.getDate()==null){
            errores++;
            mensaje = ">Debes escoger al menos una fecha inicio\n";
        }
        if(dcFechaFin.getDate()!=null){
            Date fechaFin = dcFechaFin.getDate();
            if (fechaInicio.compareTo(fechaFin) > 0) {
                errores++;
                mensaje = ">La fecha de inicio debe ser menor que la fecha de fin\n";
            }
        }
        if((int)minEntraLunes.getValue()!=0){
            if(!radAumEntraLunes.isSelected() && !radDismEntraLunes.isSelected()){
                errores++;
                mensaje = ">Debes escoger al menos una opción de variación de tiempo(+ ó -)\n";
            }
        }
        if((int)minSalidLunes.getValue()!=0){
            if(!radAumSalidLunes.isSelected() && !radDismSalidLunes.isSelected()){
                errores++;
                mensaje = ">Debes escoger al menos una opción de variación de tiempo(+ ó -)\n";
            }
        }
        if((int)minEntraMartes.getValue()!=0){
            if(!radAumEntraMartes.isSelected() && !radDismEntraMartes.isSelected()){
                errores++;
                mensaje = ">Debes escoger al menos una opción de variación de tiempo(+ ó -)\n";
            }
        }
        if((int)minSalidMartes.getValue()!=0){
            if(!radAumSalidMartes.isSelected() && !radDismSalidMartes.isSelected()){
                errores++;
                mensaje = ">Debes escoger al menos una opción de variación de tiempo(+ ó -)\n";
            }
        }
        if((int)minEntraMierc.getValue()!=0){
            if(!radAumEntraMierc.isSelected() && !radDismEntraMierc.isSelected()){
                errores++;
                mensaje = ">Debes escoger al menos una opción de variación de tiempo(+ ó -)\n";
            }
        }
        if((int)minSalidMierc.getValue()!=0){
            if(!radAumSalidMierc.isSelected() && !radDismSalidMierc.isSelected()){
                errores++;
                mensaje = ">Debes escoger al menos una opción de variación de tiempo(+ ó -)\n";
            }
        }
        //=====
        if((int)minEntraJueves.getValue()!=0){
            if(!radAumEntraJueves.isSelected() && !radDismEntraJueves.isSelected()){
                errores++;
                mensaje = ">Debes escoger al menos una opción de variación de tiempo(+ ó -)\n";
            }
        }
        if((int)minSalidJueves.getValue()!=0){
            if(!radAumSalidJueves.isSelected() && !radDismSalidJueves.isSelected()){
                errores++;
                mensaje = ">Debes escoger al menos una opción de variación de tiempo(+ ó -)\n";
            }
        }
        if((int)minEntraViernes.getValue()!=0){
            if(!radAumEntraViern.isSelected() && !radDismEntraViern.isSelected()){
                errores++;
                mensaje = ">Debes escoger al menos una opción de variación de tiempo(+ ó -)\n";
            }
        }
        if((int)minSalidViernes.getValue()!=0){
            if(!radAumSalidViern.isSelected() && !radDismSalidViern.isSelected()){
                errores++;
                mensaje = ">Debes escoger al menos una opción de variación de tiempo(+ ó -)\n";
            }
        }
        if(accion==1){
            if(empleadoSeleccionado!=null){               
                System.out.println("Para comprobar: "+empleadoSeleccionado.getNroDocumento());
                //System.out.println(asignacion.getEmpleado());
                List<CompensacionEspecial> lista = cec.buscarXFechaDni(empleadoSeleccionado.getNroDocumento(), fechaInicio);
                //System.out.println("Fecha y hora: "+fechaInicio.toString());
                if(lista.isEmpty()){

                }else{
                   errores++;
                   mensaje = "El empleado "+empleadoSeleccionado.getNroDocumento()+" tiene una variacion de horario asignada \n Ingrese una fecha fin a la distinta \n O ingrese otro rango de fechas \n";
                }
            }   
        }
        if (errores > 0) {
            JOptionPane.showMessageDialog(this, "Se ha(n) encontrado el(los) siguiente(s) error(es):\n" + mensaje, "Mensaje del sistema", JOptionPane.ERROR_MESSAGE);
        }
        return errores != 0;
    }
}
